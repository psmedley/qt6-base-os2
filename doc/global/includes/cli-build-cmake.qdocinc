/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

//! [cli-build-cmake]

    \section1 Building and Running from the Command Line

    To build an example application from the command line, create a build
    directory for it. Switch to the build directory and run \c qt-cmake to
    configure your project for building. If the project is configured
    successfully, the generated files enable you to build the project.

    \badcode
    md <build_directory>
    cd <build_directory>
    <qt_installation_directory>\bin\qt-cmake -GNinja <source_directory>
    <generator>
    \endcode

    The commands create an executable in the build directory. The \c CMake
    tool reads the project file and produces instructions for how to build
    the application. The generator then uses the instructions to produce
    the executable binary.

    For example, to build the Notepad example on Windows, when using Ninja
    as the generator, enter the following commands:

    \badcode \QtVersion
    md notepad-build
    cd notepad-build
    C:\Qt\\1\msvc2019_64\bin\qt-cmake -GNinja C:\Examples\notepad
    ninja
    \endcode

    If you do not use Ninja as the generator, use the generator-independent
    CMake command to build the application instead of \c ninja:

    \badcode
    cmake --build
    \endcode

//! [cli-build-cmake]
