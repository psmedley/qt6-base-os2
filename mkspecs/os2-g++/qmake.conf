#
# qmake configuration for os2-g++
#
# Written for GCC and OpenWatcom WLINK and assumes the Unix-like environment
# provided by bww bitwise works GmbH in their OS/2 RPM repositories.
#

include(../common/gcc-base.conf)
include(../common/g++-base.conf)

# modifications to gcc-base.conf and g++-base.conf

MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = os2
CONFIG                 += debug_and_release_target
QMAKE_COMPILER_DEFINES += QT_NO_IPV6
DEFINES                += QT_NO_IPV6

QMAKE_LEX               = flex
QMAKE_LEXFLAGS          =
QMAKE_YACC              = bison -y
QMAKE_YACCFLAGS         = -d

# Need i486 for __sync_fetch_and_sub etc, i686 - for __atomic_load_8 etc.
QMAKE_CFLAGS            = -Zomf -march=i686
QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
QMAKE_CFLAGS_HIDESYMS   =
QMAKE_CXXFLAGS_HIDESYMS =
# Need this for proper SSE alignment, see https://github.com/bitwiseworks/gcc-os2/issues/11.
# Note that -mstackrealign is default on GCC 8 and -fno-common on GCC 10.
QMAKE_CFLAGS_SSE2      += -mstackrealign -fno-common

# -ffunction-sections is not supported by GCC/2
QMAKE_CFLAGS_SPLIT_SECTIONS   =
QMAKE_CXXFLAGS_SPLIT_SECTIONS = $$QMAKE_CFLAGS_SPLIT_SECTIONS

# Disable AVX until GCC alignment is fixed, see https://github.com/bitwiseworks/gcc-os2/issues/11.
QMAKE_CFLAGS_RELEASE   += -mno-avx
QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE
QMAKE_CFLAGS_DEBUG     += -mno-avx
QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG

QMAKE_INCDIR            =

QMAKE_LFLAGS            = -Zomf -Zstack 0x2000 -Zhigh-mem -Zlinker \"DISABLE 1121\" -lpthread -lcx
QMAKE_LFLAGS_CONSOLE    = -Zlinker /PM:VIO
QMAKE_LFLAGS_WINDOWS    = -Zlinker /PM:PM -Zno-fork
QMAKE_LFLAGS_DLL        = -Zdll
QMAKE_LFLAGS_MAP        = -Zmap

QMAKE_LIBS              = -lpthread -lcx

QMAKE_EXTENSION_APP     = exe
QMAKE_PREFIX_SHLIB      =
QMAKE_EXTENSION_SHLIB   = dll
QMAKE_PREFIX_STATICLIB  =
QMAKE_EXTENSION_STATICLIB = lib
QMAKE_SUFFIX_STATICSHLIB = _s

QMAKE_LINK_IMPLIB_CMD   = emximp -p 128 -o $(LIB_TARGET) $(TARGET)

QMAKE_AR                = emxomfar rc

QMAKE_STRIP             = emxomfstrip

load(qt_config)
