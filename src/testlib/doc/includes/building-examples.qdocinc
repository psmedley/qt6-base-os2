/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

//! [building the executable]
    You can build the test case executable using CMake or qmake.

    \section2 Building with CMake

    Configure your build settings in your CMakeLists.txt file:

    \quotefile \1/CMakeLists.txt

    Next, from the command line, run either \c cmake or use the \c qt-cmake
    convenience script located in
    \c Qt-prefix/<version>/<platform>/bin/qt-cmake:

    \badcode
        <Qt-prefix>/<version>/<platform>/bin/qt-cmake <source-dir> <build-dir> -G Ninja
    \endcode

    Then, run your preferred generator tool to build the executable. Here, we're
    using Ninja:

    \badcode
        ninja
    \endcode

    \section2 Building with qmake

    Configure your build settings in your \c .pro file:

    \quotefile \1/\1.pro

    Next, run \c qmake, and, finally, run \c make to build your executable:

    \badcode
        qmake
        make
    \endcode
//! [building the executable]
